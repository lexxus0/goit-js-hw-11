{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_KEY = '44377249-dc3d438c16ab3b76144728d61';\n\nexport function fetchImages(query, numberOfImages) {\n  const preview = new URLSearchParams({\n    key: API_KEY,\n    q: query,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: 'true',\n    per_page: 200,\n  });\n\n  return fetch(`https://pixabay.com/api/?${preview.toString()}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then(data => {\n      if (!data.hits || data.hits.length === 0) {\n        iziToast.warning({\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n          position: 'topRight',\n          maxWidth: '400px',\n          color: '#b90e0a',\n          messageColor: '#fff',\n          messageLineHeight: '150%',\n          messageSize: '16px',\n        });\n        input.value = '';\n        return;\n      }\n\n      return data.hits.slice(0, Math.min(numberOfImages, data.hits.length));\n    });\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst lightbox = new SimpleLightbox('.results a', {\n  captionsData: 'title',\n  captionDelay: 0,\n});\n\nexport function renderImages(content, images) {\n  content.innerHTML = '';\n\n  images.forEach(hit => {\n    const imgCard = `\n             <a href=\"${hit.largeImageURL}\" data-lightbox=\"gallery\">\n                <div class=\"img-card\">\n                    <img src=\"${hit.webformatURL}\" width='358' height='152' alt=\"${hit.tags}\" title=\"${hit.tags}\">\n                    <div class=\"card-info\">\n                        <p>Likes <span class='span-data'>${hit.likes}</span></p>\n                        <p>Views <span class='span-data'>${hit.views}</span></p>\n                        <p>Comments <span class='span-data'>${hit.comments}</span></p>\n                        <p>Downloads <span class='span-data'>${hit.downloads}</span></p>\n                    </div>\n                </div>\n            </a>`;\n    content.insertAdjacentHTML('afterbegin', imgCard);\n  });\n\n  lightbox.refresh();\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { fetchImages } from './js/pixabay-api.js';\nimport { renderImages } from './js/render-functions.js';\n\nconst input = document.getElementById('photos_input');\nconst submitBtn = document.getElementById('submit_button');\nconst content = document.querySelector('.results');\nconst loading = document.querySelector('.loading-img');\n\nsubmitBtn.addEventListener('click', () => {\n  const value = input.value.trim();\n  const amountOfImages = prompt(\n    'How many images do you want me to show?',\n    '10'\n  );\n  const numberOfImages = Number(amountOfImages);\n\n  if (!value) {\n    console.log('Error'); // add iziToast\n    content.innerHTML = '';\n    return;\n  }\n\n  if (!numberOfImages || numberOfImages <= 0) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please enter a valid number greater than zero.',\n      position: 'topRight',\n    });\n    return;\n  }\n\n  loading.classList.add('visible');\n\n  fetchImages(value, numberOfImages)\n    .then(images => {\n      renderImages(content, images);\n    })\n    .catch(error => {\n      loading.classList.remove('visible');\n      iziToast.warning({\n        message:\n          'Sorry, there was an error fetching images. Please try again later.',\n        position: 'topRight',\n        maxWidth: '400px',\n        color: '#b90e0a',\n        messageColor: '#fff',\n        messageLineHeight: '150%',\n        messageSize: '16px',\n      });\n      console.error('Error fetching images:', error);\n    })\n    .finally(() => {\n      //anyway\n      loading.classList.remove('visible');\n    });\n});\n"],"names":["API_KEY","fetchImages","query","numberOfImages","preview","response","data","lightbox","SimpleLightbox","renderImages","content","images","hit","imgCard","input","submitBtn","loading","value","amountOfImages","iziToast","error"],"mappings":"6vBAAA,MAAMA,EAAU,qCAET,SAASC,EAAYC,EAAOC,EAAgB,CACjD,MAAMC,EAAU,IAAI,gBAAgB,CAClC,IAAKJ,EACL,EAAGE,EACH,WAAY,QACZ,YAAa,aACb,WAAY,OACZ,SAAU,GACd,CAAG,EAED,OAAO,MAAM,4BAA4BE,EAAQ,SAAQ,CAAE,EAAE,EAC1D,KAAKC,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEjC,OAAOA,EAAS,MACtB,CAAK,EACA,KAAKC,GAAQ,CACZ,GAAI,CAACA,EAAK,MAAQA,EAAK,KAAK,SAAW,EAAG,CACxC,SAAS,QAAQ,CACf,QACE,2EACF,SAAU,WACV,SAAU,QACV,MAAO,UACP,aAAc,OACd,kBAAmB,OACnB,YAAa,MACvB,CAAS,EACD,MAAM,MAAQ,GACd,MACD,CAED,OAAOA,EAAK,KAAK,MAAM,EAAG,KAAK,IAAIH,EAAgBG,EAAK,KAAK,MAAM,CAAC,CAC1E,CAAK,CACL,CClCA,MAAMC,EAAW,IAAIC,EAAe,aAAc,CAChD,aAAc,QACd,aAAc,CAChB,CAAC,EAEM,SAASC,EAAaC,EAASC,EAAQ,CAC5CD,EAAQ,UAAY,GAEpBC,EAAO,QAAQC,GAAO,CACpB,MAAMC,EAAU;AAAA,wBACID,EAAI,aAAa;AAAA;AAAA,gCAETA,EAAI,YAAY,mCAAmCA,EAAI,IAAI,YAAYA,EAAI,IAAI;AAAA;AAAA,2DAEpDA,EAAI,KAAK;AAAA,2DACTA,EAAI,KAAK;AAAA,8DACNA,EAAI,QAAQ;AAAA,+DACXA,EAAI,SAAS;AAAA;AAAA;AAAA,kBAIxEF,EAAQ,mBAAmB,aAAcG,CAAO,CACpD,CAAG,EAEDN,EAAS,QAAO,CAClB,CCvBA,MAAMO,EAAQ,SAAS,eAAe,cAAc,EAC9CC,EAAY,SAAS,eAAe,eAAe,EACnDL,EAAU,SAAS,cAAc,UAAU,EAC3CM,EAAU,SAAS,cAAc,cAAc,EAErDD,EAAU,iBAAiB,QAAS,IAAM,CACxC,MAAME,EAAQH,EAAM,MAAM,KAAI,EACxBI,EAAiB,OACrB,0CACA,IACJ,EACQf,EAAiB,OAAOe,CAAc,EAE5C,GAAI,CAACD,EAAO,CACV,QAAQ,IAAI,OAAO,EACnBP,EAAQ,UAAY,GACpB,MACD,CAED,GAAI,CAACP,GAAkBA,GAAkB,EAAG,CAC1CgB,EAAS,MAAM,CACb,MAAO,QACP,QAAS,iDACT,SAAU,UAChB,CAAK,EACD,MACD,CAEDH,EAAQ,UAAU,IAAI,SAAS,EAE/Bf,EAAYgB,EAAOd,CAAc,EAC9B,KAAKQ,GAAU,CACdF,EAAaC,EAASC,CAAM,CAClC,CAAK,EACA,MAAMS,GAAS,CACdJ,EAAQ,UAAU,OAAO,SAAS,EAClCG,EAAS,QAAQ,CACf,QACE,qEACF,SAAU,WACV,SAAU,QACV,MAAO,UACP,aAAc,OACd,kBAAmB,OACnB,YAAa,MACrB,CAAO,EACD,QAAQ,MAAM,yBAA0BC,CAAK,CACnD,CAAK,EACA,QAAQ,IAAM,CAEbJ,EAAQ,UAAU,OAAO,SAAS,CACxC,CAAK,CACL,CAAC"}